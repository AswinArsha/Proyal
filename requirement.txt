1. **Reward Management Section:**
    - This section allows searching for customers by name or ID.
    - When a customer is found, their order history should be displayed.
    - If a customer has ordered the same item 9 times and is ordering it for the 10th time, a popup or message should notify that the 10th item is free.
    - The system should allow entering the details of the food ordered to update the customer's order history accordingly.

2. **Customer Management Section:**
    - This section should display a list of all customers.
    - Selecting a customer should show detailed customer information, including their order history.
    - contains the food he ordered in a table format , to check if the  customer is nearing for the eligibility.
    - The section should also provide functionalities to add, edit, or delete customer records.
    - Include the ability to send marketing messages and offer discounts on special occasions like birthdays and anniversaries.

3. **Analytics Section:**
    - This section should provide various analytics and reports.
    - Track how many customers visit each month.
    - Analyze customer ordering patterns, such as the most popular items, peak ordering times, etc.
    - Visualize data through charts and graphs for better insights.

4. **Food Management Section:**
    - This section allows adding and managing the food items that are eligible for the "order 10 times, get one free" promotion.
    - Provide the ability to set the price and description for each food item.
    - Include functionalities to edit or remove food items from the list.

SUPABASE TABLES :
    create table
  public.customers (
    id serial,
    name text not null,
    email text not null,
    phone text not null,
    address text not null,
    date_of_birth date null,
    anniversary date null,
    customer_code integer null default nextval('customer_code_seq'::regclass),
    constraint customers_pkey primary key (id),
    constraint customers_customer_code_key unique (customer_code)
  ) tablespace pg_default;
  ,
  create table
  public.food_items (
    id serial,
    name text not null,
    code text not null,
    constraint food_items_pkey primary key (id),
    constraint unique_food_code unique (code)
  ) tablespace pg_default;
  ,
  create table
  public.orders (
    id serial,
    customer_id integer null,
    food_item text not null,
    quantity integer not null,
    order_date timestamp without time zone not null default now(),
    constraint orders_pkey primary key (id),
    constraint orders_customer_id_fkey foreign key (customer_id) references customers (id)
  ) tablespace pg_default;
  ,
  create table
  public.users (
    id serial,
    username text not null,
    password text not null,
    constraint users_pkey primary key (id)
  ) tablespace pg_default;
